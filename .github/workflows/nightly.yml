# This is a basic workflow to help you get started with Actions

name: AppImage (Nightly)

# Controls when the action will run. 
on:
  schedule:
    - cron: "0 7 1/3 * *"
  workflow_dispatch: {}

jobs:
  build:
    name: "${{ matrix.name }} (${{ matrix.arch }})"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            name: Build AppImage
            arch: x86_64
          - runs-on: ubuntu-24.04-arm
            name: Build AppImage
            arch: aarch64
    container: ghcr.io/pkgforge-dev/archlinux:latest
    steps:
      - uses: actions/checkout@v4

      - name: Get dependencies
        run: chmod +x ./get-dependencies.sh && DEVEL=true ./get-dependencies.sh

      - name: Make AppImage
        run: chmod +x ./*-appimage.sh && ./*-appimage.sh
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: AppImage-${{ matrix.arch }}
          path: dist
    
  release:
      if: ${{ github.ref_name == 'main' }}
      needs: [build]
      permissions: write-all
      runs-on: ubuntu-latest
      steps:
      - uses: actions/download-artifact@v4.3.0
        with:
          pattern: AppImage-*
          merge-multiple: true

      - name: Read version and Get date
        run: |
          cat ./version
          echo "VERSION=$(cat ./version)" >> "${GITHUB_ENV}"
          echo "DATE=$(date +'%Y-%m-%d_%s')" >> "${GITHUB_ENV}"

      - name: Del Previous Release
        run: gh release delete "nightly" --repo "${GITHUB_REPOSITORY}" --cleanup-tag -y && sleep 5
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Release nightly build
        uses: softprops/action-gh-release@v2.2.2
        with:
          name: "Nightly Build (${{ env.DATE }})"
          tag_name: "nightly"
          prerelease: true
          draft: false
          generate_release_notes: false
          make_latest: false
          files: |
            *.AppImage*
